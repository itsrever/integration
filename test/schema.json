{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Integration stubs",
  "version": "1.0",
  "description": "Stubs for implementing a REVER integration",
  "properties": {
    "schemaVersion": {
      "type": "string",
      "description": "The version of this schema that will be used to validate JSON data"
    },
    "customer_printed_order_id": {
      "type": "string",
      "description": "This is the `customer_printed_order_id` as a unique identifier of the order"
    },
    "integration.Order": {
      "description": "Model for an Order returned by a custom integration. REVER supports multi-currency with the following\nrestrictions:\n\n  * the shop currency must be the same for every order within the same e-commerce\n  * there must be only one customer currency per order (it can be the same or not than the shop currency)\n\nIn addition, discounts are supported as pre-tax calculations. \nGift cards are not considered discounts but a payment method.\n",
      "type": "object",
      "required": [
        "date",
        "taxes_included",
        "total_amount",
        "total_taxes",
        "fulfillment_orders",
        "payment",
        "customer",
        "line_items",
        "shipping_address",
        "billing_address",
        "shipping",
        "returns"
      ],
      "properties": {
        "date": {
          "description": "Date when the Order was created in the e-commerce\n",
          "type": "string",
          "format": "date-time"
        },
        "taxes_included": {
          "description": "Indicates if the taxes should be displayed as included in the total amount of the order or separated\n",
          "type": "boolean"
        },
        "total_amount": {
          "description": "Total amount of the order, including taxes, discounts and shipping costs. Must match the sum of the `line_items` \nusing the shop and customer currency, plus the shipping costs.\n",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "total_taxes": {
          "description": "Total taxes of the order\n",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "fulfillment_orders": {
          "description": "List of fulfillment orders per items or groups of items in the order.\n",
          "type": "array",
          "items": {
            "description": "Represents either an item or a group of items in an order that are to be fulfilled from the same location. \nThere can be more than one fulfillment order for an order at a given location\n",
            "required": [
              "fulfillments",
              "date",
              "location_id"
            ],
            "properties": {
              "location_id": {
                "description": "An identifier of the e-commerce location that shipped the items in this fulfillment order.\n",
                "type": "string",
                "example": "MADRID_WAREHOUSE"
              },
              "date": {
                "description": "Date when the fulfillment was executed\n",
                "type": "string",
                "format": "date-time"
              },
              "fulfillments": {
                "description": "Information of the `line_items` fulfilled in this order \n",
                "type": "array",
                "items": {
                  "description": "Line item fulfilled in an order",
                  "required": [
                    "line_item_id",
                    "quantity"
                  ],
                  "type": "object",
                  "properties": {
                    "line_item_id": {
                      "description": "ID of the line item being fulfilled. Must exist in the `line_items` array of the order.",
                      "type": "string",
                      "example": "1"
                    },
                    "quantity": {
                      "description": "Number of products fulfilled. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "returns": {
          "description": "List of returns already associated to the order\n",
          "type": "array",
          "items": {
            "description": "A return operation executed over one or more items of an order. It might\nbe in progress or successfully completed.\n",
            "type": "object",
            "required": [
              "date",
              "return_id",
              "returns"
            ],
            "properties": {
              "description": {
                "description": "An optional text associated to the return order",
                "type": "string"
              },
              "date": {
                "description": "Date when the return was executed\n",
                "type": "string",
                "format": "date-time",
                "example": "executed by REVER"
              },
              "return_id": {
                "description": "Unique identifier of the return order\n",
                "type": "string",
                "example": "return_0012"
              },
              "returns": {
                "description": "List of items returned in this return order\n",
                "type": "array",
                "items": {
                  "description": "A return operation executed over one or more items of an order. It might\nbe in progress or successfully completed.\n",
                  "type": "object",
                  "required": [
                    "line_item_id",
                    "quantity"
                  ],
                  "properties": {
                    "line_item_id": {
                      "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
                      "type": "string",
                      "example": "1"
                    },
                    "quantity": {
                      "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "refunds": {
          "description": "List of refunds already associated to the order. Optional, only if OPM is supported.\n",
          "type": "array",
          "items": {
            "description": "A refund operation executed over one or more items of an order. \n",
            "type": "object",
            "required": [
              "date",
              "refund_id",
              "amount",
              "refunds"
            ],
            "properties": {
              "description": {
                "description": "An optional text associated to the refund order",
                "type": "string"
              },
              "date": {
                "description": "Date when the refund was executed\n",
                "type": "string",
                "format": "date-time",
                "example": "executed manually by admin"
              },
              "refund_id": {
                "description": "Unique identifier of the refund order in the e-commerce\n",
                "type": "string",
                "example": "refund_ABC1234"
              },
              "transaction_id": {
                "description": "Optional identifier of the gateway transaction associated (payment refund)\n",
                "type": "string",
                "example": "payment_0012"
              },
              "amount": {
                "description": "Amount of the refund, with currency associated. Must match the customer currency\ngiven in the `Order` object\n",
                "allOf": [
                  {
                    "description": "Model for an amount plus the currency in which it is expressed.\n",
                    "type": "object",
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "properties": {
                      "amount": {
                        "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                        "type": "number",
                        "example": 123.45
                      },
                      "currency": {
                        "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                        "type": "string",
                        "example": "EUR"
                      }
                    }
                  }
                ]
              },
              "refunds": {
                "description": "List of items refunded in this refund order\n",
                "type": "array",
                "items": {
                  "description": "A refund operation executed over one or more items of an order\n",
                  "type": "object",
                  "required": [
                    "line_item_id",
                    "quantity"
                  ],
                  "properties": {
                    "line_item_id": {
                      "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
                      "type": "string",
                      "example": "1"
                    },
                    "quantity": {
                      "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "payment": {
          "description": "Payment information for the order",
          "type": "object",
          "required": [
            "date",
            "transactions"
          ],
          "properties": {
            "date": {
              "description": "Date when the payment for the whole order was made. This field should be present\nwith a valid value if the order has been fully paid (not just partially).\n",
              "type": "string",
              "format": "date-time"
            },
            "transactions": {
              "description": "List of transactions executed as payment for the order. \nIf the order is `fully_paid`, then this list should have at least one element.\n",
              "type": "array",
              "items": {
                "description": "Transaction executed as payment for an order",
                "type": "object",
                "required": [
                  "payment_method_type",
                  "transaction_id",
                  "amount",
                  "date"
                ],
                "properties": {
                  "payment_method_type": {
                    "description": "Payment method used for this transaction. Any string can be returned in here, but some\ndo have a special meaning and should have be preferred if possible:\n  - `manual`: the payment was made manually, outside of the e-commerce\n  - `cash-on-delivery`: the payment was made in cash when the order was delivered\n  - `bnpl`: the payment was made using a Buy Now Pay Later method\n  - `credit-card`: the payment was made using a credit card\n  - `debit-card`: the payment was made using a debit card\n  - `paypal`: the payment was made using PayPal\n  - `gift`: the payment was made using a gift card\n",
                    "type": "string",
                    "example": "credit-card"
                  },
                  "transaction_id": {
                    "description": "Identifier of the transaction in the payment gateway\n",
                    "type": "string",
                    "example": "TX_1234567890"
                  },
                  "amount": {
                    "description": "Amount of the transaction, with currency associated. Must match the customer currency\ngiven in the `Order` object\n",
                    "allOf": [
                      {
                        "description": "Model for an amount plus the currency in which it is expressed.\n",
                        "type": "object",
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                            "type": "number",
                            "example": 123.45
                          },
                          "currency": {
                            "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                            "type": "string",
                            "example": "EUR"
                          }
                        }
                      }
                    ]
                  },
                  "date": {
                    "description": "Date when the transaction was executed\n",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "customer": {
          "description": "Customer associated to the order",
          "required": [
            "email"
          ],
          "properties": {
            "preferred_lang": {
              "description": "two-letter code as per the ISO 639-1 codes, preferred by the customer\n",
              "type": "string",
              "example": "es"
            },
            "email": {
              "description": "Email address of the customer. This field will be used to match the customer when starting a return process\n",
              "type": "string",
              "example": "developer@itsrever.com"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Doe"
            }
          },
          "type": "object"
        },
        "identification": {
          "description": "Extended data for identifying an order in any e-commerce",
          "type": "object",
          "required": [
            "customer_printed_order_id"
          ],
          "properties": {
            "customer_printed_order_id": {
              "description": "This is the `order_id` as seen by the customer (for example, in the email confirmation)\n",
              "type": "string",
              "example": "#MH123423"
            },
            "id": {
              "description": "Unique identifier in the origin platform. Might not be customer-friendly. It can be the same as the `customer_printed_order_id``",
              "type": "string",
              "example": "1234567890"
            }
          }
        },
        "shipping": {
          "description": "Shipping information",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "description": "Total amount charged as shipping costs.\n",
              "allOf": [
                {
                  "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                  "type": "object",
                  "required": [
                    "amount_shop",
                    "amount_customer"
                  ],
                  "properties": {
                    "amount_shop": {
                      "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                      "allOf": [
                        {
                          "description": "Model for an amount plus the currency in which it is expressed.\n",
                          "type": "object",
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                              "type": "number",
                              "example": 123.45
                            },
                            "currency": {
                              "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                              "type": "string",
                              "example": "EUR"
                            }
                          }
                        }
                      ]
                    },
                    "amount_customer": {
                      "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                      "allOf": [
                        {
                          "description": "Model for an amount plus the currency in which it is expressed.\n",
                          "type": "object",
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                              "type": "number",
                              "example": 123.45
                            },
                            "currency": {
                              "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                              "type": "string",
                              "example": "EUR"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "line_items": {
          "description": "List of items in the order. It should only include products or services, \nnot shipping costs. When working with international orders,\nthe customer currency and shop currency might be different. As REVER supports multicurrency, 2 currencies \ncan be specified per `line_item`. However, all of the `line_items` must have the same shop and \ncustomer currency. \n",
          "items": {
            "description": "One of the line items from the Order. Consist of a quantity of a product or a product variant,\nwith the associated price, taxes and discounts. For the properties of the item sold, the property\n`product` should be used. If the item sold is a variant of a product, the property `variant` should\nbe filled additionally, with the variant information, and the properties in there will override\nthe properties in the `product` object.\n",
            "required": [
              "id",
              "name",
              "product",
              "quantity",
              "subtotal",
              "total",
              "total_discounts",
              "total_taxes",
              "unit_price"
            ],
            "properties": {
              "comment": {
                "description": "Optional customer comments/notes for the line item",
                "type": "string"
              },
              "id": {
                "description": "Id of the line item in the source platform. Must be unique within the order.",
                "type": "string",
                "example": "1"
              },
              "name": {
                "description": "Name of the line item (not necessarily the name of the product). If possible, in the customer `preferred_lang`",
                "type": "string",
                "example": "Wolves in the mountain T-Shirt"
              },
              "product": {
                "description": "A product from the e-commerce catalog (enabled or not). Products that are removed from the catalog should still be available in the orders.",
                "required": [
                  "id",
                  "name",
                  "unit_price"
                ],
                "properties": {
                  "categories": {
                    "items": {
                      "description": "A category from the e-commerce catalog. It can be used to filter products or decide if a product is returnable or not.",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "apparel"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "description": "Product description",
                    "type": "string",
                    "example": "This is a very nice product"
                  },
                  "id": {
                    "description": "Unique identifier for this resource in the source platform",
                    "type": "string",
                    "example": "1234567890"
                  },
                  "images": {
                    "description": "Images associated to the product",
                    "items": {
                      "description": "An image from the e-commerce catalog",
                      "required": [
                        "src"
                      ],
                      "properties": {
                        "alt": {
                          "description": "Image alternative text",
                          "type": "string"
                        },
                        "name": {
                          "description": "Image name",
                          "type": "string",
                          "example": "Product Image"
                        },
                        "src": {
                          "description": "Image URL",
                          "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Product name",
                    "type": "string",
                    "example": "Wolves in the mountain T-Shirt"
                  },
                  "unit_price": {
                    "description": "Price per unit of the product in the shop currency. Must be present if there are no variants. Does not include taxes nor discounts. Those will be applied later on.",
                    "allOf": [
                      {
                        "description": "Model for an amount plus the currency in which it is expressed.\n",
                        "type": "object",
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                            "type": "number",
                            "example": 123.45
                          },
                          "currency": {
                            "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                            "type": "string",
                            "example": "EUR"
                          }
                        }
                      }
                    ]
                  },
                  "short_description": {
                    "description": "Product short description",
                    "type": "string",
                    "example": "People love this product"
                  },
                  "sku": {
                    "description": "stock-keeping unit (SKU) is a scannable bar code, most often seen printed on product labels in a retail store. Should be present if there are no variants.",
                    "type": "string",
                    "example": "SKU_0012121121"
                  },
                  "inventory_quantity": {
                    "description": "Optional inventory quantity. Overridden if there are variants defined. This field\nis not in use yet but it will be in the future for offering exchanges not based in \nvariants.\n",
                    "type": "integer",
                    "example": 45
                  },
                  "tags": {
                    "description": "Optional tags associated to the product. They can be used to mark it as non-returnable.",
                    "items": {
                      "description": "a tag (string) associated to one resource",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "apparel"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "variants": {
                    "description": "All of the available product variations (if any). This is useful for offering exchanges of variants. If a `line_item`` references a variation, the attributes of the variation have to be used instead of the ones of the product",
                    "items": {
                      "description": "A variant of a product from the e-commerce catalog. It's the combination of one or more option values (e.g. size or size + color)",
                      "required": [
                        "id",
                        "name",
                        "enabled",
                        "options",
                        "unit_price"
                      ],
                      "properties": {
                        "description": {
                          "description": "Variant description",
                          "type": "string",
                          "example": "XS, green"
                        },
                        "enabled": {
                          "description": "If this product variant should be selectable by the customer",
                          "type": "boolean"
                        },
                        "id": {
                          "description": "Unique identifier for the resource in the source platform",
                          "type": "string",
                          "example": "variant_2"
                        },
                        "images": {
                          "description": "Images associated to the variant",
                          "items": {
                            "description": "An image from the e-commerce catalog",
                            "required": [
                              "src"
                            ],
                            "properties": {
                              "alt": {
                                "description": "Image alternative text",
                                "type": "string"
                              },
                              "name": {
                                "description": "Image name",
                                "type": "string",
                                "example": "Product Image"
                              },
                              "src": {
                                "description": "Image URL",
                                "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "inventory_quantity": {
                          "description": "Optional inventory quantity. Replaces the one from the product. This\ninformation must be provided for offering exchanges based in variants. If you don't\nprovide this information, it will be assumed that the variant is not available.\n",
                          "type": "integer",
                          "example": 23
                        },
                        "name": {
                          "description": "Name of the variant",
                          "type": "string",
                          "example": "XS, green"
                        },
                        "options": {
                          "description": "The list of options that conforms this variant",
                          "items": {
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the option",
                                "type": "string",
                                "example": "Size"
                              },
                              "value": {
                                "description": "Value of the option",
                                "type": "string",
                                "example": "XS"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "unit_price": {
                          "description": "Unit price in the shop currency. Does not include taxes nor discounts. Those will be applied later on.",
                          "allOf": [
                            {
                              "description": "Model for an amount plus the currency in which it is expressed.\n",
                              "type": "object",
                              "required": [
                                "amount",
                                "currency"
                              ],
                              "properties": {
                                "amount": {
                                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                  "type": "number",
                                  "example": 123.45
                                },
                                "currency": {
                                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                  "type": "string",
                                  "example": "EUR"
                                }
                              }
                            }
                          ]
                        },
                        "short_description": {
                          "description": "Variant short description",
                          "type": "string"
                        },
                        "sku": {
                          "description": "Optional unique identifier of the product as SKU. Replaces the one from the product.",
                          "type": "string"
                        },
                        "weight": {
                          "description": "weight for this product variant, measured in grams. Replaces the one from the product.",
                          "type": "integer",
                          "example": 1100
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "description": "number of items of the same product and variant",
                "type": "integer",
                "example": 2
              },
              "subtotal": {
                "description": "sub total amount of the line before discounts and taxes\n`subtotal = unit_price * quantity`",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "total": {
                "description": "total amount of the line including discounts and taxes total = (subtotal - total_discounts) + total_taxes this is going to be the amount to be refunded (multiplied by items_returned/quantity)",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "total_discounts": {
                "description": "total amount of discounts applied to this line item. Each item of this line item has a proportional discount.",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "total_taxes": {
                "description": "total amount of taxes for this line. Each item of this line item has proportional taxes.",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "unit_price": {
                "description": "unit price of a single item (product as listed, no discounts, no taxes, quantity = 1)",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "variant_id": {
                "description": "Variant ID of the product. The same Product ID can have different variants but they \nmust be listed in a different line item. A Variant can be the size: S, M, L, XL, etc.\nOnly one variant ia allowed at the moment (one dimension). The `variant_id` must exist\nin the `variants` array of the `product` object.",
                "type": "string",
                "example": "variant_2"
              },
              "variant_name": {
                "description": "Name of the variant, in the customer preferred language",
                "type": "string",
                "example": "XS, green"
              },
              "weight": {
                "description": "weight for products from the order, measured in grams",
                "type": "integer",
                "example": 1000
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "shipping_address": {
          "description": "Address to where the Order was shipped.\n",
          "allOf": [
            {
              "description": "Generic address used in many scenarios",
              "required": [
                "address_line_1",
                "city",
                "country",
                "country_code",
                "first_name",
                "last_name",
                "phone",
                "postcode"
              ],
              "properties": {
                "address_line_1": {
                  "description": "Main address line. Usually the street and number. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "Calle de la Princesa, 5"
                },
                "address_line_2": {
                  "description": "Secondary address line. Usually the floor, door, etc. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "2º Interno"
                },
                "city": {
                  "type": "string",
                  "example": "Madrid"
                },
                "company": {
                  "type": "string",
                  "example": "REVER"
                },
                "country": {
                  "description": "The name of the country as it is usually used in the language of the e-commerce",
                  "type": "string",
                  "example": "Spain"
                },
                "country_code": {
                  "description": "the 2-letter country code (alpha-2) from the ISO 3166",
                  "type": "string",
                  "example": "ES"
                },
                "email": {
                  "type": "string",
                  "example": "developer@itsrever.com"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "phone": {
                  "type": "string",
                  "example": "+34606456789"
                },
                "postcode": {
                  "type": "string",
                  "example": "28008"
                },
                "state_province": {
                  "type": "string",
                  "example": "Madrid"
                }
              },
              "type": "object"
            }
          ]
        },
        "billing_address": {
          "description": "Address for invoicing (not shipping, though it can be the same)\n",
          "allOf": [
            {
              "description": "Generic address used in many scenarios",
              "required": [
                "address_line_1",
                "city",
                "country",
                "country_code",
                "first_name",
                "last_name",
                "phone",
                "postcode"
              ],
              "properties": {
                "address_line_1": {
                  "description": "Main address line. Usually the street and number. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "Calle de la Princesa, 5"
                },
                "address_line_2": {
                  "description": "Secondary address line. Usually the floor, door, etc. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "2º Interno"
                },
                "city": {
                  "type": "string",
                  "example": "Madrid"
                },
                "company": {
                  "type": "string",
                  "example": "REVER"
                },
                "country": {
                  "description": "The name of the country as it is usually used in the language of the e-commerce",
                  "type": "string",
                  "example": "Spain"
                },
                "country_code": {
                  "description": "the 2-letter country code (alpha-2) from the ISO 3166",
                  "type": "string",
                  "example": "ES"
                },
                "email": {
                  "type": "string",
                  "example": "developer@itsrever.com"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "phone": {
                  "type": "string",
                  "example": "+34606456789"
                },
                "postcode": {
                  "type": "string",
                  "example": "28008"
                },
                "state_province": {
                  "type": "string",
                  "example": "Madrid"
                }
              },
              "type": "object"
            }
          ]
        },
        "notes": {
          "description": "List of notes added to the order. The notes are ordered by date, the most recent one first. They can\ninclude orders from the customer or from other third-parties, like REVER.\n",
          "items": {
            "description": "Note (text) associated to an order",
            "required": [
              "text",
              "date"
            ],
            "properties": {
              "date": {
                "description": "Date when the note was added to the order\n",
                "type": "string",
                "format": "date-time"
              },
              "user": {
                "description": "User that added the note. Can be the customer or a third-party, like REVER. This is optional, but it's recommended.\nIntegrators can guess the name of the app through the usage of the API key.\n",
                "type": "string",
                "example": "REVER"
              },
              "text": {
                "description": "Arbitrary text associated to the order\n",
                "type": "string",
                "example": "Sample note: Started a return process in REVER with ID #22122"
              }
            }
          },
          "type": "array"
        }
      }
    },
    "object-1": {
      "type": "object",
      "properties": {
        "note": {
          "type": "string",
          "description": "The text to be associated to the order"
        }
      }
    },
    "integration.ReturnRequest": {
      "description": "Payload for the method CreateOrUpdateReturn.",
      "type": "object",
      "required": [
        "returns"
      ],
      "properties": {
        "returns": {
          "description": "List of items to mark (or unmark) as returned. Can't be empty.",
          "type": "array",
          "items": {
            "description": "Items from an order being marked as returned",
            "type": "object",
            "required": [
              "line_item_id",
              "quantity"
            ],
            "properties": {
              "line_item_id": {
                "description": "The id of the line item from the order, corresponding to the product/variant being returned List of items to mark (or unmark) as returned",
                "type": "string",
                "example": "line_item_01"
              },
              "quantity": {
                "description": "Number of items from that line item being returned. Can be a positive or negative number. If negative, the previous return operation is totally or partially reverted.",
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "object-2": {
      "type": "object",
      "required": [
        "return_id"
      ],
      "properties": {
        "return_id": {
          "description": "the id of the return generated in the platform",
          "type": "string"
        }
      }
    }
  },
  "required": [
    "schemaVersion"
  ],
  "definitions": {
    "integration.ReturnRequestItem": {
      "description": "Items from an order being marked as returned",
      "type": "object",
      "required": [
        "line_item_id",
        "quantity"
      ],
      "properties": {
        "line_item_id": {
          "description": "The id of the line item from the order, corresponding to the product/variant being returned List of items to mark (or unmark) as returned",
          "type": "string",
          "example": "line_item_01"
        },
        "quantity": {
          "description": "Number of items from that line item being returned. Can be a positive or negative number. If negative, the previous return operation is totally or partially reverted.",
          "type": "number",
          "example": 1
        }
      }
    },
    "integration.ReturnRequest": {
      "description": "Payload for the method CreateOrUpdateReturn.",
      "type": "object",
      "required": [
        "returns"
      ],
      "properties": {
        "returns": {
          "description": "List of items to mark (or unmark) as returned. Can't be empty.",
          "type": "array",
          "items": {
            "description": "Items from an order being marked as returned",
            "type": "object",
            "required": [
              "line_item_id",
              "quantity"
            ],
            "properties": {
              "line_item_id": {
                "description": "The id of the line item from the order, corresponding to the product/variant being returned List of items to mark (or unmark) as returned",
                "type": "string",
                "example": "line_item_01"
              },
              "quantity": {
                "description": "Number of items from that line item being returned. Can be a positive or negative number. If negative, the previous return operation is totally or partially reverted.",
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "integration.MultiMoney": {
      "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
      "type": "object",
      "required": [
        "amount_shop",
        "amount_customer"
      ],
      "properties": {
        "amount_shop": {
          "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
          "allOf": [
            {
              "description": "Model for an amount plus the currency in which it is expressed.\n",
              "type": "object",
              "required": [
                "amount",
                "currency"
              ],
              "properties": {
                "amount": {
                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                  "type": "number",
                  "example": 123.45
                },
                "currency": {
                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                  "type": "string",
                  "example": "EUR"
                }
              }
            }
          ]
        },
        "amount_customer": {
          "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
          "allOf": [
            {
              "description": "Model for an amount plus the currency in which it is expressed.\n",
              "type": "object",
              "required": [
                "amount",
                "currency"
              ],
              "properties": {
                "amount": {
                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                  "type": "number",
                  "example": 123.45
                },
                "currency": {
                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                  "type": "string",
                  "example": "EUR"
                }
              }
            }
          ]
        }
      }
    },
    "integration.Money": {
      "description": "Model for an amount plus the currency in which it is expressed.\n",
      "type": "object",
      "required": [
        "amount",
        "currency"
      ],
      "properties": {
        "amount": {
          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
          "type": "number",
          "example": 123.45
        },
        "currency": {
          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "integration.Order": {
      "description": "Model for an Order returned by a custom integration. REVER supports multi-currency with the following\nrestrictions:\n\n  * the shop currency must be the same for every order within the same e-commerce\n  * there must be only one customer currency per order (it can be the same or not than the shop currency)\n\nIn addition, discounts are supported as pre-tax calculations. \nGift cards are not considered discounts but a payment method.\n",
      "type": "object",
      "required": [
        "date",
        "taxes_included",
        "total_amount",
        "total_taxes",
        "fulfillment_orders",
        "payment",
        "customer",
        "line_items",
        "shipping_address",
        "billing_address",
        "shipping",
        "returns"
      ],
      "properties": {
        "date": {
          "description": "Date when the Order was created in the e-commerce\n",
          "type": "string",
          "format": "date-time"
        },
        "taxes_included": {
          "description": "Indicates if the taxes should be displayed as included in the total amount of the order or separated\n",
          "type": "boolean"
        },
        "total_amount": {
          "description": "Total amount of the order, including taxes, discounts and shipping costs. Must match the sum of the `line_items` \nusing the shop and customer currency, plus the shipping costs.\n",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "total_taxes": {
          "description": "Total taxes of the order\n",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "fulfillment_orders": {
          "description": "List of fulfillment orders per items or groups of items in the order.\n",
          "type": "array",
          "items": {
            "description": "Represents either an item or a group of items in an order that are to be fulfilled from the same location. \nThere can be more than one fulfillment order for an order at a given location\n",
            "required": [
              "fulfillments",
              "date",
              "location_id"
            ],
            "properties": {
              "location_id": {
                "description": "An identifier of the e-commerce location that shipped the items in this fulfillment order.\n",
                "type": "string",
                "example": "MADRID_WAREHOUSE"
              },
              "date": {
                "description": "Date when the fulfillment was executed\n",
                "type": "string",
                "format": "date-time"
              },
              "fulfillments": {
                "description": "Information of the `line_items` fulfilled in this order \n",
                "type": "array",
                "items": {
                  "description": "Line item fulfilled in an order",
                  "required": [
                    "line_item_id",
                    "quantity"
                  ],
                  "type": "object",
                  "properties": {
                    "line_item_id": {
                      "description": "ID of the line item being fulfilled. Must exist in the `line_items` array of the order.",
                      "type": "string",
                      "example": "1"
                    },
                    "quantity": {
                      "description": "Number of products fulfilled. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "returns": {
          "description": "List of returns already associated to the order\n",
          "type": "array",
          "items": {
            "description": "A return operation executed over one or more items of an order. It might\nbe in progress or successfully completed.\n",
            "type": "object",
            "required": [
              "date",
              "return_id",
              "returns"
            ],
            "properties": {
              "description": {
                "description": "An optional text associated to the return order",
                "type": "string"
              },
              "date": {
                "description": "Date when the return was executed\n",
                "type": "string",
                "format": "date-time",
                "example": "executed by REVER"
              },
              "return_id": {
                "description": "Unique identifier of the return order\n",
                "type": "string",
                "example": "return_0012"
              },
              "returns": {
                "description": "List of items returned in this return order\n",
                "type": "array",
                "items": {
                  "description": "A return operation executed over one or more items of an order. It might\nbe in progress or successfully completed.\n",
                  "type": "object",
                  "required": [
                    "line_item_id",
                    "quantity"
                  ],
                  "properties": {
                    "line_item_id": {
                      "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
                      "type": "string",
                      "example": "1"
                    },
                    "quantity": {
                      "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "refunds": {
          "description": "List of refunds already associated to the order. Optional, only if OPM is supported.\n",
          "type": "array",
          "items": {
            "description": "A refund operation executed over one or more items of an order. \n",
            "type": "object",
            "required": [
              "date",
              "refund_id",
              "amount",
              "refunds"
            ],
            "properties": {
              "description": {
                "description": "An optional text associated to the refund order",
                "type": "string"
              },
              "date": {
                "description": "Date when the refund was executed\n",
                "type": "string",
                "format": "date-time",
                "example": "executed manually by admin"
              },
              "refund_id": {
                "description": "Unique identifier of the refund order in the e-commerce\n",
                "type": "string",
                "example": "refund_ABC1234"
              },
              "transaction_id": {
                "description": "Optional identifier of the gateway transaction associated (payment refund)\n",
                "type": "string",
                "example": "payment_0012"
              },
              "amount": {
                "description": "Amount of the refund, with currency associated. Must match the customer currency\ngiven in the `Order` object\n",
                "allOf": [
                  {
                    "description": "Model for an amount plus the currency in which it is expressed.\n",
                    "type": "object",
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "properties": {
                      "amount": {
                        "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                        "type": "number",
                        "example": 123.45
                      },
                      "currency": {
                        "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                        "type": "string",
                        "example": "EUR"
                      }
                    }
                  }
                ]
              },
              "refunds": {
                "description": "List of items refunded in this refund order\n",
                "type": "array",
                "items": {
                  "description": "A refund operation executed over one or more items of an order\n",
                  "type": "object",
                  "required": [
                    "line_item_id",
                    "quantity"
                  ],
                  "properties": {
                    "line_item_id": {
                      "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
                      "type": "string",
                      "example": "1"
                    },
                    "quantity": {
                      "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "payment": {
          "description": "Payment information for the order",
          "type": "object",
          "required": [
            "date",
            "transactions"
          ],
          "properties": {
            "date": {
              "description": "Date when the payment for the whole order was made. This field should be present\nwith a valid value if the order has been fully paid (not just partially).\n",
              "type": "string",
              "format": "date-time"
            },
            "transactions": {
              "description": "List of transactions executed as payment for the order. \nIf the order is `fully_paid`, then this list should have at least one element.\n",
              "type": "array",
              "items": {
                "description": "Transaction executed as payment for an order",
                "type": "object",
                "required": [
                  "payment_method_type",
                  "transaction_id",
                  "amount",
                  "date"
                ],
                "properties": {
                  "payment_method_type": {
                    "description": "Payment method used for this transaction. Any string can be returned in here, but some\ndo have a special meaning and should have be preferred if possible:\n  - `manual`: the payment was made manually, outside of the e-commerce\n  - `cash-on-delivery`: the payment was made in cash when the order was delivered\n  - `bnpl`: the payment was made using a Buy Now Pay Later method\n  - `credit-card`: the payment was made using a credit card\n  - `debit-card`: the payment was made using a debit card\n  - `paypal`: the payment was made using PayPal\n  - `gift`: the payment was made using a gift card\n",
                    "type": "string",
                    "example": "credit-card"
                  },
                  "transaction_id": {
                    "description": "Identifier of the transaction in the payment gateway\n",
                    "type": "string",
                    "example": "TX_1234567890"
                  },
                  "amount": {
                    "description": "Amount of the transaction, with currency associated. Must match the customer currency\ngiven in the `Order` object\n",
                    "allOf": [
                      {
                        "description": "Model for an amount plus the currency in which it is expressed.\n",
                        "type": "object",
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                            "type": "number",
                            "example": 123.45
                          },
                          "currency": {
                            "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                            "type": "string",
                            "example": "EUR"
                          }
                        }
                      }
                    ]
                  },
                  "date": {
                    "description": "Date when the transaction was executed\n",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "customer": {
          "description": "Customer associated to the order",
          "required": [
            "email"
          ],
          "properties": {
            "preferred_lang": {
              "description": "two-letter code as per the ISO 639-1 codes, preferred by the customer\n",
              "type": "string",
              "example": "es"
            },
            "email": {
              "description": "Email address of the customer. This field will be used to match the customer when starting a return process\n",
              "type": "string",
              "example": "developer@itsrever.com"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Doe"
            }
          },
          "type": "object"
        },
        "identification": {
          "description": "Extended data for identifying an order in any e-commerce",
          "type": "object",
          "required": [
            "customer_printed_order_id"
          ],
          "properties": {
            "customer_printed_order_id": {
              "description": "This is the `order_id` as seen by the customer (for example, in the email confirmation)\n",
              "type": "string",
              "example": "#MH123423"
            },
            "id": {
              "description": "Unique identifier in the origin platform. Might not be customer-friendly. It can be the same as the `customer_printed_order_id``",
              "type": "string",
              "example": "1234567890"
            }
          }
        },
        "shipping": {
          "description": "Shipping information",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "description": "Total amount charged as shipping costs.\n",
              "allOf": [
                {
                  "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                  "type": "object",
                  "required": [
                    "amount_shop",
                    "amount_customer"
                  ],
                  "properties": {
                    "amount_shop": {
                      "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                      "allOf": [
                        {
                          "description": "Model for an amount plus the currency in which it is expressed.\n",
                          "type": "object",
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                              "type": "number",
                              "example": 123.45
                            },
                            "currency": {
                              "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                              "type": "string",
                              "example": "EUR"
                            }
                          }
                        }
                      ]
                    },
                    "amount_customer": {
                      "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                      "allOf": [
                        {
                          "description": "Model for an amount plus the currency in which it is expressed.\n",
                          "type": "object",
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                              "type": "number",
                              "example": 123.45
                            },
                            "currency": {
                              "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                              "type": "string",
                              "example": "EUR"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "line_items": {
          "description": "List of items in the order. It should only include products or services, \nnot shipping costs. When working with international orders,\nthe customer currency and shop currency might be different. As REVER supports multicurrency, 2 currencies \ncan be specified per `line_item`. However, all of the `line_items` must have the same shop and \ncustomer currency. \n",
          "items": {
            "description": "One of the line items from the Order. Consist of a quantity of a product or a product variant,\nwith the associated price, taxes and discounts. For the properties of the item sold, the property\n`product` should be used. If the item sold is a variant of a product, the property `variant` should\nbe filled additionally, with the variant information, and the properties in there will override\nthe properties in the `product` object.\n",
            "required": [
              "id",
              "name",
              "product",
              "quantity",
              "subtotal",
              "total",
              "total_discounts",
              "total_taxes",
              "unit_price"
            ],
            "properties": {
              "comment": {
                "description": "Optional customer comments/notes for the line item",
                "type": "string"
              },
              "id": {
                "description": "Id of the line item in the source platform. Must be unique within the order.",
                "type": "string",
                "example": "1"
              },
              "name": {
                "description": "Name of the line item (not necessarily the name of the product). If possible, in the customer `preferred_lang`",
                "type": "string",
                "example": "Wolves in the mountain T-Shirt"
              },
              "product": {
                "description": "A product from the e-commerce catalog (enabled or not). Products that are removed from the catalog should still be available in the orders.",
                "required": [
                  "id",
                  "name",
                  "unit_price"
                ],
                "properties": {
                  "categories": {
                    "items": {
                      "description": "A category from the e-commerce catalog. It can be used to filter products or decide if a product is returnable or not.",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "apparel"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "description": "Product description",
                    "type": "string",
                    "example": "This is a very nice product"
                  },
                  "id": {
                    "description": "Unique identifier for this resource in the source platform",
                    "type": "string",
                    "example": "1234567890"
                  },
                  "images": {
                    "description": "Images associated to the product",
                    "items": {
                      "description": "An image from the e-commerce catalog",
                      "required": [
                        "src"
                      ],
                      "properties": {
                        "alt": {
                          "description": "Image alternative text",
                          "type": "string"
                        },
                        "name": {
                          "description": "Image name",
                          "type": "string",
                          "example": "Product Image"
                        },
                        "src": {
                          "description": "Image URL",
                          "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Product name",
                    "type": "string",
                    "example": "Wolves in the mountain T-Shirt"
                  },
                  "unit_price": {
                    "description": "Price per unit of the product in the shop currency. Must be present if there are no variants. Does not include taxes nor discounts. Those will be applied later on.",
                    "allOf": [
                      {
                        "description": "Model for an amount plus the currency in which it is expressed.\n",
                        "type": "object",
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                            "type": "number",
                            "example": 123.45
                          },
                          "currency": {
                            "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                            "type": "string",
                            "example": "EUR"
                          }
                        }
                      }
                    ]
                  },
                  "short_description": {
                    "description": "Product short description",
                    "type": "string",
                    "example": "People love this product"
                  },
                  "sku": {
                    "description": "stock-keeping unit (SKU) is a scannable bar code, most often seen printed on product labels in a retail store. Should be present if there are no variants.",
                    "type": "string",
                    "example": "SKU_0012121121"
                  },
                  "inventory_quantity": {
                    "description": "Optional inventory quantity. Overridden if there are variants defined. This field\nis not in use yet but it will be in the future for offering exchanges not based in \nvariants.\n",
                    "type": "integer",
                    "example": 45
                  },
                  "tags": {
                    "description": "Optional tags associated to the product. They can be used to mark it as non-returnable.",
                    "items": {
                      "description": "a tag (string) associated to one resource",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "apparel"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "variants": {
                    "description": "All of the available product variations (if any). This is useful for offering exchanges of variants. If a `line_item`` references a variation, the attributes of the variation have to be used instead of the ones of the product",
                    "items": {
                      "description": "A variant of a product from the e-commerce catalog. It's the combination of one or more option values (e.g. size or size + color)",
                      "required": [
                        "id",
                        "name",
                        "enabled",
                        "options",
                        "unit_price"
                      ],
                      "properties": {
                        "description": {
                          "description": "Variant description",
                          "type": "string",
                          "example": "XS, green"
                        },
                        "enabled": {
                          "description": "If this product variant should be selectable by the customer",
                          "type": "boolean"
                        },
                        "id": {
                          "description": "Unique identifier for the resource in the source platform",
                          "type": "string",
                          "example": "variant_2"
                        },
                        "images": {
                          "description": "Images associated to the variant",
                          "items": {
                            "description": "An image from the e-commerce catalog",
                            "required": [
                              "src"
                            ],
                            "properties": {
                              "alt": {
                                "description": "Image alternative text",
                                "type": "string"
                              },
                              "name": {
                                "description": "Image name",
                                "type": "string",
                                "example": "Product Image"
                              },
                              "src": {
                                "description": "Image URL",
                                "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "inventory_quantity": {
                          "description": "Optional inventory quantity. Replaces the one from the product. This\ninformation must be provided for offering exchanges based in variants. If you don't\nprovide this information, it will be assumed that the variant is not available.\n",
                          "type": "integer",
                          "example": 23
                        },
                        "name": {
                          "description": "Name of the variant",
                          "type": "string",
                          "example": "XS, green"
                        },
                        "options": {
                          "description": "The list of options that conforms this variant",
                          "items": {
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the option",
                                "type": "string",
                                "example": "Size"
                              },
                              "value": {
                                "description": "Value of the option",
                                "type": "string",
                                "example": "XS"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "unit_price": {
                          "description": "Unit price in the shop currency. Does not include taxes nor discounts. Those will be applied later on.",
                          "allOf": [
                            {
                              "description": "Model for an amount plus the currency in which it is expressed.\n",
                              "type": "object",
                              "required": [
                                "amount",
                                "currency"
                              ],
                              "properties": {
                                "amount": {
                                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                  "type": "number",
                                  "example": 123.45
                                },
                                "currency": {
                                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                  "type": "string",
                                  "example": "EUR"
                                }
                              }
                            }
                          ]
                        },
                        "short_description": {
                          "description": "Variant short description",
                          "type": "string"
                        },
                        "sku": {
                          "description": "Optional unique identifier of the product as SKU. Replaces the one from the product.",
                          "type": "string"
                        },
                        "weight": {
                          "description": "weight for this product variant, measured in grams. Replaces the one from the product.",
                          "type": "integer",
                          "example": 1100
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "description": "number of items of the same product and variant",
                "type": "integer",
                "example": 2
              },
              "subtotal": {
                "description": "sub total amount of the line before discounts and taxes\n`subtotal = unit_price * quantity`",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "total": {
                "description": "total amount of the line including discounts and taxes total = (subtotal - total_discounts) + total_taxes this is going to be the amount to be refunded (multiplied by items_returned/quantity)",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "total_discounts": {
                "description": "total amount of discounts applied to this line item. Each item of this line item has a proportional discount.",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "total_taxes": {
                "description": "total amount of taxes for this line. Each item of this line item has proportional taxes.",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "unit_price": {
                "description": "unit price of a single item (product as listed, no discounts, no taxes, quantity = 1)",
                "allOf": [
                  {
                    "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
                    "type": "object",
                    "required": [
                      "amount_shop",
                      "amount_customer"
                    ],
                    "properties": {
                      "amount_shop": {
                        "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      },
                      "amount_customer": {
                        "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                        "allOf": [
                          {
                            "description": "Model for an amount plus the currency in which it is expressed.\n",
                            "type": "object",
                            "required": [
                              "amount",
                              "currency"
                            ],
                            "properties": {
                              "amount": {
                                "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                                "type": "number",
                                "example": 123.45
                              },
                              "currency": {
                                "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                                "type": "string",
                                "example": "EUR"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "variant_id": {
                "description": "Variant ID of the product. The same Product ID can have different variants but they \nmust be listed in a different line item. A Variant can be the size: S, M, L, XL, etc.\nOnly one variant ia allowed at the moment (one dimension). The `variant_id` must exist\nin the `variants` array of the `product` object.",
                "type": "string",
                "example": "variant_2"
              },
              "variant_name": {
                "description": "Name of the variant, in the customer preferred language",
                "type": "string",
                "example": "XS, green"
              },
              "weight": {
                "description": "weight for products from the order, measured in grams",
                "type": "integer",
                "example": 1000
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "shipping_address": {
          "description": "Address to where the Order was shipped.\n",
          "allOf": [
            {
              "description": "Generic address used in many scenarios",
              "required": [
                "address_line_1",
                "city",
                "country",
                "country_code",
                "first_name",
                "last_name",
                "phone",
                "postcode"
              ],
              "properties": {
                "address_line_1": {
                  "description": "Main address line. Usually the street and number. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "Calle de la Princesa, 5"
                },
                "address_line_2": {
                  "description": "Secondary address line. Usually the floor, door, etc. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "2º Interno"
                },
                "city": {
                  "type": "string",
                  "example": "Madrid"
                },
                "company": {
                  "type": "string",
                  "example": "REVER"
                },
                "country": {
                  "description": "The name of the country as it is usually used in the language of the e-commerce",
                  "type": "string",
                  "example": "Spain"
                },
                "country_code": {
                  "description": "the 2-letter country code (alpha-2) from the ISO 3166",
                  "type": "string",
                  "example": "ES"
                },
                "email": {
                  "type": "string",
                  "example": "developer@itsrever.com"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "phone": {
                  "type": "string",
                  "example": "+34606456789"
                },
                "postcode": {
                  "type": "string",
                  "example": "28008"
                },
                "state_province": {
                  "type": "string",
                  "example": "Madrid"
                }
              },
              "type": "object"
            }
          ]
        },
        "billing_address": {
          "description": "Address for invoicing (not shipping, though it can be the same)\n",
          "allOf": [
            {
              "description": "Generic address used in many scenarios",
              "required": [
                "address_line_1",
                "city",
                "country",
                "country_code",
                "first_name",
                "last_name",
                "phone",
                "postcode"
              ],
              "properties": {
                "address_line_1": {
                  "description": "Main address line. Usually the street and number. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "Calle de la Princesa, 5"
                },
                "address_line_2": {
                  "description": "Secondary address line. Usually the floor, door, etc. Should not be larger than 15 characters",
                  "type": "string",
                  "example": "2º Interno"
                },
                "city": {
                  "type": "string",
                  "example": "Madrid"
                },
                "company": {
                  "type": "string",
                  "example": "REVER"
                },
                "country": {
                  "description": "The name of the country as it is usually used in the language of the e-commerce",
                  "type": "string",
                  "example": "Spain"
                },
                "country_code": {
                  "description": "the 2-letter country code (alpha-2) from the ISO 3166",
                  "type": "string",
                  "example": "ES"
                },
                "email": {
                  "type": "string",
                  "example": "developer@itsrever.com"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "phone": {
                  "type": "string",
                  "example": "+34606456789"
                },
                "postcode": {
                  "type": "string",
                  "example": "28008"
                },
                "state_province": {
                  "type": "string",
                  "example": "Madrid"
                }
              },
              "type": "object"
            }
          ]
        },
        "notes": {
          "description": "List of notes added to the order. The notes are ordered by date, the most recent one first. They can\ninclude orders from the customer or from other third-parties, like REVER.\n",
          "items": {
            "description": "Note (text) associated to an order",
            "required": [
              "text",
              "date"
            ],
            "properties": {
              "date": {
                "description": "Date when the note was added to the order\n",
                "type": "string",
                "format": "date-time"
              },
              "user": {
                "description": "User that added the note. Can be the customer or a third-party, like REVER. This is optional, but it's recommended.\nIntegrators can guess the name of the app through the usage of the API key.\n",
                "type": "string",
                "example": "REVER"
              },
              "text": {
                "description": "Arbitrary text associated to the order\n",
                "type": "string",
                "example": "Sample note: Started a return process in REVER with ID #22122"
              }
            }
          },
          "type": "array"
        }
      }
    },
    "integration.Note": {
      "description": "Note (text) associated to an order",
      "required": [
        "text",
        "date"
      ],
      "properties": {
        "date": {
          "description": "Date when the note was added to the order\n",
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "description": "User that added the note. Can be the customer or a third-party, like REVER. This is optional, but it's recommended.\nIntegrators can guess the name of the app through the usage of the API key.\n",
          "type": "string",
          "example": "REVER"
        },
        "text": {
          "description": "Arbitrary text associated to the order\n",
          "type": "string",
          "example": "Sample note: Started a return process in REVER with ID #22122"
        }
      }
    },
    "integration.Address": {
      "description": "Generic address used in many scenarios",
      "required": [
        "address_line_1",
        "city",
        "country",
        "country_code",
        "first_name",
        "last_name",
        "phone",
        "postcode"
      ],
      "properties": {
        "address_line_1": {
          "description": "Main address line. Usually the street and number. Should not be larger than 15 characters",
          "type": "string",
          "example": "Calle de la Princesa, 5"
        },
        "address_line_2": {
          "description": "Secondary address line. Usually the floor, door, etc. Should not be larger than 15 characters",
          "type": "string",
          "example": "2º Interno"
        },
        "city": {
          "type": "string",
          "example": "Madrid"
        },
        "company": {
          "type": "string",
          "example": "REVER"
        },
        "country": {
          "description": "The name of the country as it is usually used in the language of the e-commerce",
          "type": "string",
          "example": "Spain"
        },
        "country_code": {
          "description": "the 2-letter country code (alpha-2) from the ISO 3166",
          "type": "string",
          "example": "ES"
        },
        "email": {
          "type": "string",
          "example": "developer@itsrever.com"
        },
        "first_name": {
          "type": "string",
          "example": "John"
        },
        "last_name": {
          "type": "string",
          "example": "Doe"
        },
        "phone": {
          "type": "string",
          "example": "+34606456789"
        },
        "postcode": {
          "type": "string",
          "example": "28008"
        },
        "state_province": {
          "type": "string",
          "example": "Madrid"
        }
      },
      "type": "object"
    },
    "integration.Payment": {
      "description": "Payment information for the order",
      "type": "object",
      "required": [
        "date",
        "transactions"
      ],
      "properties": {
        "date": {
          "description": "Date when the payment for the whole order was made. This field should be present\nwith a valid value if the order has been fully paid (not just partially).\n",
          "type": "string",
          "format": "date-time"
        },
        "transactions": {
          "description": "List of transactions executed as payment for the order. \nIf the order is `fully_paid`, then this list should have at least one element.\n",
          "type": "array",
          "items": {
            "description": "Transaction executed as payment for an order",
            "type": "object",
            "required": [
              "payment_method_type",
              "transaction_id",
              "amount",
              "date"
            ],
            "properties": {
              "payment_method_type": {
                "description": "Payment method used for this transaction. Any string can be returned in here, but some\ndo have a special meaning and should have be preferred if possible:\n  - `manual`: the payment was made manually, outside of the e-commerce\n  - `cash-on-delivery`: the payment was made in cash when the order was delivered\n  - `bnpl`: the payment was made using a Buy Now Pay Later method\n  - `credit-card`: the payment was made using a credit card\n  - `debit-card`: the payment was made using a debit card\n  - `paypal`: the payment was made using PayPal\n  - `gift`: the payment was made using a gift card\n",
                "type": "string",
                "example": "credit-card"
              },
              "transaction_id": {
                "description": "Identifier of the transaction in the payment gateway\n",
                "type": "string",
                "example": "TX_1234567890"
              },
              "amount": {
                "description": "Amount of the transaction, with currency associated. Must match the customer currency\ngiven in the `Order` object\n",
                "allOf": [
                  {
                    "description": "Model for an amount plus the currency in which it is expressed.\n",
                    "type": "object",
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "properties": {
                      "amount": {
                        "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                        "type": "number",
                        "example": 123.45
                      },
                      "currency": {
                        "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                        "type": "string",
                        "example": "EUR"
                      }
                    }
                  }
                ]
              },
              "date": {
                "description": "Date when the transaction was executed\n",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "integration.Transaction": {
      "description": "Transaction executed as payment for an order",
      "type": "object",
      "required": [
        "payment_method_type",
        "transaction_id",
        "amount",
        "date"
      ],
      "properties": {
        "payment_method_type": {
          "description": "Payment method used for this transaction. Any string can be returned in here, but some\ndo have a special meaning and should have be preferred if possible:\n  - `manual`: the payment was made manually, outside of the e-commerce\n  - `cash-on-delivery`: the payment was made in cash when the order was delivered\n  - `bnpl`: the payment was made using a Buy Now Pay Later method\n  - `credit-card`: the payment was made using a credit card\n  - `debit-card`: the payment was made using a debit card\n  - `paypal`: the payment was made using PayPal\n  - `gift`: the payment was made using a gift card\n",
          "type": "string",
          "example": "credit-card"
        },
        "transaction_id": {
          "description": "Identifier of the transaction in the payment gateway\n",
          "type": "string",
          "example": "TX_1234567890"
        },
        "amount": {
          "description": "Amount of the transaction, with currency associated. Must match the customer currency\ngiven in the `Order` object\n",
          "allOf": [
            {
              "description": "Model for an amount plus the currency in which it is expressed.\n",
              "type": "object",
              "required": [
                "amount",
                "currency"
              ],
              "properties": {
                "amount": {
                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                  "type": "number",
                  "example": 123.45
                },
                "currency": {
                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                  "type": "string",
                  "example": "EUR"
                }
              }
            }
          ]
        },
        "date": {
          "description": "Date when the transaction was executed\n",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "integration.ReturnOrder": {
      "description": "A return operation executed over one or more items of an order. It might\nbe in progress or successfully completed.\n",
      "type": "object",
      "required": [
        "date",
        "return_id",
        "returns"
      ],
      "properties": {
        "description": {
          "description": "An optional text associated to the return order",
          "type": "string"
        },
        "date": {
          "description": "Date when the return was executed\n",
          "type": "string",
          "format": "date-time",
          "example": "executed by REVER"
        },
        "return_id": {
          "description": "Unique identifier of the return order\n",
          "type": "string",
          "example": "return_0012"
        },
        "returns": {
          "description": "List of items returned in this return order\n",
          "type": "array",
          "items": {
            "description": "A return operation executed over one or more items of an order. It might\nbe in progress or successfully completed.\n",
            "type": "object",
            "required": [
              "line_item_id",
              "quantity"
            ],
            "properties": {
              "line_item_id": {
                "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
                "type": "string",
                "example": "1"
              },
              "quantity": {
                "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "integration.RefundOrder": {
      "description": "A refund operation executed over one or more items of an order. \n",
      "type": "object",
      "required": [
        "date",
        "refund_id",
        "amount",
        "refunds"
      ],
      "properties": {
        "description": {
          "description": "An optional text associated to the refund order",
          "type": "string"
        },
        "date": {
          "description": "Date when the refund was executed\n",
          "type": "string",
          "format": "date-time",
          "example": "executed manually by admin"
        },
        "refund_id": {
          "description": "Unique identifier of the refund order in the e-commerce\n",
          "type": "string",
          "example": "refund_ABC1234"
        },
        "transaction_id": {
          "description": "Optional identifier of the gateway transaction associated (payment refund)\n",
          "type": "string",
          "example": "payment_0012"
        },
        "amount": {
          "description": "Amount of the refund, with currency associated. Must match the customer currency\ngiven in the `Order` object\n",
          "allOf": [
            {
              "description": "Model for an amount plus the currency in which it is expressed.\n",
              "type": "object",
              "required": [
                "amount",
                "currency"
              ],
              "properties": {
                "amount": {
                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                  "type": "number",
                  "example": 123.45
                },
                "currency": {
                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                  "type": "string",
                  "example": "EUR"
                }
              }
            }
          ]
        },
        "refunds": {
          "description": "List of items refunded in this refund order\n",
          "type": "array",
          "items": {
            "description": "A refund operation executed over one or more items of an order\n",
            "type": "object",
            "required": [
              "line_item_id",
              "quantity"
            ],
            "properties": {
              "line_item_id": {
                "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
                "type": "string",
                "example": "1"
              },
              "quantity": {
                "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "integration.Return": {
      "description": "A return operation executed over one or more items of an order. It might\nbe in progress or successfully completed.\n",
      "type": "object",
      "required": [
        "line_item_id",
        "quantity"
      ],
      "properties": {
        "line_item_id": {
          "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
          "type": "string",
          "example": "1"
        },
        "quantity": {
          "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
          "type": "number",
          "example": 1
        }
      }
    },
    "integration.Refund": {
      "description": "A refund operation executed over one or more items of an order\n",
      "type": "object",
      "required": [
        "line_item_id",
        "quantity"
      ],
      "properties": {
        "line_item_id": {
          "description": "ID of the line item returned. Must exist in the `line_items` array of the order.",
          "type": "string",
          "example": "1"
        },
        "quantity": {
          "description": "Number of products returned. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
          "type": "number",
          "example": 1
        }
      }
    },
    "integration.FulfillmentOrder": {
      "description": "Represents either an item or a group of items in an order that are to be fulfilled from the same location. \nThere can be more than one fulfillment order for an order at a given location\n",
      "required": [
        "fulfillments",
        "date",
        "location_id"
      ],
      "properties": {
        "location_id": {
          "description": "An identifier of the e-commerce location that shipped the items in this fulfillment order.\n",
          "type": "string",
          "example": "MADRID_WAREHOUSE"
        },
        "date": {
          "description": "Date when the fulfillment was executed\n",
          "type": "string",
          "format": "date-time"
        },
        "fulfillments": {
          "description": "Information of the `line_items` fulfilled in this order \n",
          "type": "array",
          "items": {
            "description": "Line item fulfilled in an order",
            "required": [
              "line_item_id",
              "quantity"
            ],
            "type": "object",
            "properties": {
              "line_item_id": {
                "description": "ID of the line item being fulfilled. Must exist in the `line_items` array of the order.",
                "type": "string",
                "example": "1"
              },
              "quantity": {
                "description": "Number of products fulfilled. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    },
    "integration.Fulfillment": {
      "description": "Line item fulfilled in an order",
      "required": [
        "line_item_id",
        "quantity"
      ],
      "type": "object",
      "properties": {
        "line_item_id": {
          "description": "ID of the line item being fulfilled. Must exist in the `line_items` array of the order.",
          "type": "string",
          "example": "1"
        },
        "quantity": {
          "description": "Number of products fulfilled. The sum of quantities per `line_item_id` must match the total quantity of the line item.",
          "type": "number",
          "example": 1
        }
      }
    },
    "integration.Shipping": {
      "description": "Shipping information",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Total amount charged as shipping costs.\n",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "integration.Customer": {
      "description": "Customer associated to the order",
      "required": [
        "email"
      ],
      "properties": {
        "preferred_lang": {
          "description": "two-letter code as per the ISO 639-1 codes, preferred by the customer\n",
          "type": "string",
          "example": "es"
        },
        "email": {
          "description": "Email address of the customer. This field will be used to match the customer when starting a return process\n",
          "type": "string",
          "example": "developer@itsrever.com"
        },
        "first_name": {
          "type": "string",
          "example": "John"
        },
        "last_name": {
          "type": "string",
          "example": "Doe"
        }
      },
      "type": "object"
    },
    "integration.Identification": {
      "description": "Extended data for identifying an order in any e-commerce",
      "type": "object",
      "required": [
        "customer_printed_order_id"
      ],
      "properties": {
        "customer_printed_order_id": {
          "description": "This is the `order_id` as seen by the customer (for example, in the email confirmation)\n",
          "type": "string",
          "example": "#MH123423"
        },
        "id": {
          "description": "Unique identifier in the origin platform. Might not be customer-friendly. It can be the same as the `customer_printed_order_id``",
          "type": "string",
          "example": "1234567890"
        }
      }
    },
    "integration.LineItem": {
      "description": "One of the line items from the Order. Consist of a quantity of a product or a product variant,\nwith the associated price, taxes and discounts. For the properties of the item sold, the property\n`product` should be used. If the item sold is a variant of a product, the property `variant` should\nbe filled additionally, with the variant information, and the properties in there will override\nthe properties in the `product` object.\n",
      "required": [
        "id",
        "name",
        "product",
        "quantity",
        "subtotal",
        "total",
        "total_discounts",
        "total_taxes",
        "unit_price"
      ],
      "properties": {
        "comment": {
          "description": "Optional customer comments/notes for the line item",
          "type": "string"
        },
        "id": {
          "description": "Id of the line item in the source platform. Must be unique within the order.",
          "type": "string",
          "example": "1"
        },
        "name": {
          "description": "Name of the line item (not necessarily the name of the product). If possible, in the customer `preferred_lang`",
          "type": "string",
          "example": "Wolves in the mountain T-Shirt"
        },
        "product": {
          "description": "A product from the e-commerce catalog (enabled or not). Products that are removed from the catalog should still be available in the orders.",
          "required": [
            "id",
            "name",
            "unit_price"
          ],
          "properties": {
            "categories": {
              "items": {
                "description": "A category from the e-commerce catalog. It can be used to filter products or decide if a product is returnable or not.",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "apparel"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "description": "Product description",
              "type": "string",
              "example": "This is a very nice product"
            },
            "id": {
              "description": "Unique identifier for this resource in the source platform",
              "type": "string",
              "example": "1234567890"
            },
            "images": {
              "description": "Images associated to the product",
              "items": {
                "description": "An image from the e-commerce catalog",
                "required": [
                  "src"
                ],
                "properties": {
                  "alt": {
                    "description": "Image alternative text",
                    "type": "string"
                  },
                  "name": {
                    "description": "Image name",
                    "type": "string",
                    "example": "Product Image"
                  },
                  "src": {
                    "description": "Image URL",
                    "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "name": {
              "description": "Product name",
              "type": "string",
              "example": "Wolves in the mountain T-Shirt"
            },
            "unit_price": {
              "description": "Price per unit of the product in the shop currency. Must be present if there are no variants. Does not include taxes nor discounts. Those will be applied later on.",
              "allOf": [
                {
                  "description": "Model for an amount plus the currency in which it is expressed.\n",
                  "type": "object",
                  "required": [
                    "amount",
                    "currency"
                  ],
                  "properties": {
                    "amount": {
                      "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                      "type": "number",
                      "example": 123.45
                    },
                    "currency": {
                      "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                      "type": "string",
                      "example": "EUR"
                    }
                  }
                }
              ]
            },
            "short_description": {
              "description": "Product short description",
              "type": "string",
              "example": "People love this product"
            },
            "sku": {
              "description": "stock-keeping unit (SKU) is a scannable bar code, most often seen printed on product labels in a retail store. Should be present if there are no variants.",
              "type": "string",
              "example": "SKU_0012121121"
            },
            "inventory_quantity": {
              "description": "Optional inventory quantity. Overridden if there are variants defined. This field\nis not in use yet but it will be in the future for offering exchanges not based in \nvariants.\n",
              "type": "integer",
              "example": 45
            },
            "tags": {
              "description": "Optional tags associated to the product. They can be used to mark it as non-returnable.",
              "items": {
                "description": "a tag (string) associated to one resource",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "apparel"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "variants": {
              "description": "All of the available product variations (if any). This is useful for offering exchanges of variants. If a `line_item`` references a variation, the attributes of the variation have to be used instead of the ones of the product",
              "items": {
                "description": "A variant of a product from the e-commerce catalog. It's the combination of one or more option values (e.g. size or size + color)",
                "required": [
                  "id",
                  "name",
                  "enabled",
                  "options",
                  "unit_price"
                ],
                "properties": {
                  "description": {
                    "description": "Variant description",
                    "type": "string",
                    "example": "XS, green"
                  },
                  "enabled": {
                    "description": "If this product variant should be selectable by the customer",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "Unique identifier for the resource in the source platform",
                    "type": "string",
                    "example": "variant_2"
                  },
                  "images": {
                    "description": "Images associated to the variant",
                    "items": {
                      "description": "An image from the e-commerce catalog",
                      "required": [
                        "src"
                      ],
                      "properties": {
                        "alt": {
                          "description": "Image alternative text",
                          "type": "string"
                        },
                        "name": {
                          "description": "Image name",
                          "type": "string",
                          "example": "Product Image"
                        },
                        "src": {
                          "description": "Image URL",
                          "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "inventory_quantity": {
                    "description": "Optional inventory quantity. Replaces the one from the product. This\ninformation must be provided for offering exchanges based in variants. If you don't\nprovide this information, it will be assumed that the variant is not available.\n",
                    "type": "integer",
                    "example": 23
                  },
                  "name": {
                    "description": "Name of the variant",
                    "type": "string",
                    "example": "XS, green"
                  },
                  "options": {
                    "description": "The list of options that conforms this variant",
                    "items": {
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the option",
                          "type": "string",
                          "example": "Size"
                        },
                        "value": {
                          "description": "Value of the option",
                          "type": "string",
                          "example": "XS"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "unit_price": {
                    "description": "Unit price in the shop currency. Does not include taxes nor discounts. Those will be applied later on.",
                    "allOf": [
                      {
                        "description": "Model for an amount plus the currency in which it is expressed.\n",
                        "type": "object",
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "properties": {
                          "amount": {
                            "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                            "type": "number",
                            "example": 123.45
                          },
                          "currency": {
                            "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                            "type": "string",
                            "example": "EUR"
                          }
                        }
                      }
                    ]
                  },
                  "short_description": {
                    "description": "Variant short description",
                    "type": "string"
                  },
                  "sku": {
                    "description": "Optional unique identifier of the product as SKU. Replaces the one from the product.",
                    "type": "string"
                  },
                  "weight": {
                    "description": "weight for this product variant, measured in grams. Replaces the one from the product.",
                    "type": "integer",
                    "example": 1100
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "quantity": {
          "description": "number of items of the same product and variant",
          "type": "integer",
          "example": 2
        },
        "subtotal": {
          "description": "sub total amount of the line before discounts and taxes\n`subtotal = unit_price * quantity`",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "total": {
          "description": "total amount of the line including discounts and taxes total = (subtotal - total_discounts) + total_taxes this is going to be the amount to be refunded (multiplied by items_returned/quantity)",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "total_discounts": {
          "description": "total amount of discounts applied to this line item. Each item of this line item has a proportional discount.",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "total_taxes": {
          "description": "total amount of taxes for this line. Each item of this line item has proportional taxes.",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "unit_price": {
          "description": "unit price of a single item (product as listed, no discounts, no taxes, quantity = 1)",
          "allOf": [
            {
              "description": "An amount that is expressed in two currencies: the shop and the customer one. They can be the same or not.\n",
              "type": "object",
              "required": [
                "amount_shop",
                "amount_customer"
              ],
              "properties": {
                "amount_shop": {
                  "description": "Amount in the shop currency. \nUseful for accounting purposes, to provide reporting in this currency. \nUsually, the shop currency is the same for every order within the e-commerce.\n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                },
                "amount_customer": {
                  "description": "Amount in the customer currency. \nUsed as the amount + currency that the customer is really going to use for paying, the currency that the customer selected in the website.\nUsually, this comes from applying a conversion rate to the shop currency. \n",
                  "allOf": [
                    {
                      "description": "Model for an amount plus the currency in which it is expressed.\n",
                      "type": "object",
                      "required": [
                        "amount",
                        "currency"
                      ],
                      "properties": {
                        "amount": {
                          "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                          "type": "number",
                          "example": 123.45
                        },
                        "currency": {
                          "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                          "type": "string",
                          "example": "EUR"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "variant_id": {
          "description": "Variant ID of the product. The same Product ID can have different variants but they \nmust be listed in a different line item. A Variant can be the size: S, M, L, XL, etc.\nOnly one variant ia allowed at the moment (one dimension). The `variant_id` must exist\nin the `variants` array of the `product` object.",
          "type": "string",
          "example": "variant_2"
        },
        "variant_name": {
          "description": "Name of the variant, in the customer preferred language",
          "type": "string",
          "example": "XS, green"
        },
        "weight": {
          "description": "weight for products from the order, measured in grams",
          "type": "integer",
          "example": 1000
        }
      },
      "type": "object"
    },
    "integration.Tag": {
      "description": "a tag (string) associated to one resource",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "apparel"
        }
      },
      "type": "object"
    },
    "integration.Product": {
      "description": "A product from the e-commerce catalog (enabled or not). Products that are removed from the catalog should still be available in the orders.",
      "required": [
        "id",
        "name",
        "unit_price"
      ],
      "properties": {
        "categories": {
          "items": {
            "description": "A category from the e-commerce catalog. It can be used to filter products or decide if a product is returnable or not.",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "example": "apparel"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "description": {
          "description": "Product description",
          "type": "string",
          "example": "This is a very nice product"
        },
        "id": {
          "description": "Unique identifier for this resource in the source platform",
          "type": "string",
          "example": "1234567890"
        },
        "images": {
          "description": "Images associated to the product",
          "items": {
            "description": "An image from the e-commerce catalog",
            "required": [
              "src"
            ],
            "properties": {
              "alt": {
                "description": "Image alternative text",
                "type": "string"
              },
              "name": {
                "description": "Image name",
                "type": "string",
                "example": "Product Image"
              },
              "src": {
                "description": "Image URL",
                "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "description": "Product name",
          "type": "string",
          "example": "Wolves in the mountain T-Shirt"
        },
        "unit_price": {
          "description": "Price per unit of the product in the shop currency. Must be present if there are no variants. Does not include taxes nor discounts. Those will be applied later on.",
          "allOf": [
            {
              "description": "Model for an amount plus the currency in which it is expressed.\n",
              "type": "object",
              "required": [
                "amount",
                "currency"
              ],
              "properties": {
                "amount": {
                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                  "type": "number",
                  "example": 123.45
                },
                "currency": {
                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                  "type": "string",
                  "example": "EUR"
                }
              }
            }
          ]
        },
        "short_description": {
          "description": "Product short description",
          "type": "string",
          "example": "People love this product"
        },
        "sku": {
          "description": "stock-keeping unit (SKU) is a scannable bar code, most often seen printed on product labels in a retail store. Should be present if there are no variants.",
          "type": "string",
          "example": "SKU_0012121121"
        },
        "inventory_quantity": {
          "description": "Optional inventory quantity. Overridden if there are variants defined. This field\nis not in use yet but it will be in the future for offering exchanges not based in \nvariants.\n",
          "type": "integer",
          "example": 45
        },
        "tags": {
          "description": "Optional tags associated to the product. They can be used to mark it as non-returnable.",
          "items": {
            "description": "a tag (string) associated to one resource",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "apparel"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "variants": {
          "description": "All of the available product variations (if any). This is useful for offering exchanges of variants. If a `line_item`` references a variation, the attributes of the variation have to be used instead of the ones of the product",
          "items": {
            "description": "A variant of a product from the e-commerce catalog. It's the combination of one or more option values (e.g. size or size + color)",
            "required": [
              "id",
              "name",
              "enabled",
              "options",
              "unit_price"
            ],
            "properties": {
              "description": {
                "description": "Variant description",
                "type": "string",
                "example": "XS, green"
              },
              "enabled": {
                "description": "If this product variant should be selectable by the customer",
                "type": "boolean"
              },
              "id": {
                "description": "Unique identifier for the resource in the source platform",
                "type": "string",
                "example": "variant_2"
              },
              "images": {
                "description": "Images associated to the variant",
                "items": {
                  "description": "An image from the e-commerce catalog",
                  "required": [
                    "src"
                  ],
                  "properties": {
                    "alt": {
                      "description": "Image alternative text",
                      "type": "string"
                    },
                    "name": {
                      "description": "Image name",
                      "type": "string",
                      "example": "Product Image"
                    },
                    "src": {
                      "description": "Image URL",
                      "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "inventory_quantity": {
                "description": "Optional inventory quantity. Replaces the one from the product. This\ninformation must be provided for offering exchanges based in variants. If you don't\nprovide this information, it will be assumed that the variant is not available.\n",
                "type": "integer",
                "example": 23
              },
              "name": {
                "description": "Name of the variant",
                "type": "string",
                "example": "XS, green"
              },
              "options": {
                "description": "The list of options that conforms this variant",
                "items": {
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the option",
                      "type": "string",
                      "example": "Size"
                    },
                    "value": {
                      "description": "Value of the option",
                      "type": "string",
                      "example": "XS"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "unit_price": {
                "description": "Unit price in the shop currency. Does not include taxes nor discounts. Those will be applied later on.",
                "allOf": [
                  {
                    "description": "Model for an amount plus the currency in which it is expressed.\n",
                    "type": "object",
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "properties": {
                      "amount": {
                        "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                        "type": "number",
                        "example": 123.45
                      },
                      "currency": {
                        "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                        "type": "string",
                        "example": "EUR"
                      }
                    }
                  }
                ]
              },
              "short_description": {
                "description": "Variant short description",
                "type": "string"
              },
              "sku": {
                "description": "Optional unique identifier of the product as SKU. Replaces the one from the product.",
                "type": "string"
              },
              "weight": {
                "description": "weight for this product variant, measured in grams. Replaces the one from the product.",
                "type": "integer",
                "example": 1100
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "integration.Category": {
      "description": "A category from the e-commerce catalog. It can be used to filter products or decide if a product is returnable or not.",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "apparel"
        }
      },
      "type": "object"
    },
    "integration.Image": {
      "description": "An image from the e-commerce catalog",
      "required": [
        "src"
      ],
      "properties": {
        "alt": {
          "description": "Image alternative text",
          "type": "string"
        },
        "name": {
          "description": "Image name",
          "type": "string",
          "example": "Product Image"
        },
        "src": {
          "description": "Image URL",
          "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
          "type": "string"
        }
      },
      "type": "object"
    },
    "integration.Variant": {
      "description": "A variant of a product from the e-commerce catalog. It's the combination of one or more option values (e.g. size or size + color)",
      "required": [
        "id",
        "name",
        "enabled",
        "options",
        "unit_price"
      ],
      "properties": {
        "description": {
          "description": "Variant description",
          "type": "string",
          "example": "XS, green"
        },
        "enabled": {
          "description": "If this product variant should be selectable by the customer",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the resource in the source platform",
          "type": "string",
          "example": "variant_2"
        },
        "images": {
          "description": "Images associated to the variant",
          "items": {
            "description": "An image from the e-commerce catalog",
            "required": [
              "src"
            ],
            "properties": {
              "alt": {
                "description": "Image alternative text",
                "type": "string"
              },
              "name": {
                "description": "Image name",
                "type": "string",
                "example": "Product Image"
              },
              "src": {
                "description": "Image URL",
                "example": "https://itsrever.com/wp-content/uploads/2022/03/logo-rever-header.svg",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "inventory_quantity": {
          "description": "Optional inventory quantity. Replaces the one from the product. This\ninformation must be provided for offering exchanges based in variants. If you don't\nprovide this information, it will be assumed that the variant is not available.\n",
          "type": "integer",
          "example": 23
        },
        "name": {
          "description": "Name of the variant",
          "type": "string",
          "example": "XS, green"
        },
        "options": {
          "description": "The list of options that conforms this variant",
          "items": {
            "required": [
              "name",
              "value"
            ],
            "properties": {
              "name": {
                "description": "Name of the option",
                "type": "string",
                "example": "Size"
              },
              "value": {
                "description": "Value of the option",
                "type": "string",
                "example": "XS"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "unit_price": {
          "description": "Unit price in the shop currency. Does not include taxes nor discounts. Those will be applied later on.",
          "allOf": [
            {
              "description": "Model for an amount plus the currency in which it is expressed.\n",
              "type": "object",
              "required": [
                "amount",
                "currency"
              ],
              "properties": {
                "amount": {
                  "description": "amount (optionally with decimals), without currency symbol and thousands separator",
                  "type": "number",
                  "example": 123.45
                },
                "currency": {
                  "description": "three-letter code as ISO 4217 currency code. \nExamples: EUR, USD, JPY, GBP...\nThe currency must be supported by REVER.\n",
                  "type": "string",
                  "example": "EUR"
                }
              }
            }
          ]
        },
        "short_description": {
          "description": "Variant short description",
          "type": "string"
        },
        "sku": {
          "description": "Optional unique identifier of the product as SKU. Replaces the one from the product.",
          "type": "string"
        },
        "weight": {
          "description": "weight for this product variant, measured in grams. Replaces the one from the product.",
          "type": "integer",
          "example": 1100
        }
      },
      "type": "object"
    },
    "integration.Option": {
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name of the option",
          "type": "string",
          "example": "Size"
        },
        "value": {
          "description": "Value of the option",
          "type": "string",
          "example": "XS"
        }
      },
      "type": "object"
    }
  }
}