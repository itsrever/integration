/*
Integration stubs

Stubs for implementing a REVER integration

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// IntegrationOrderIdentification Extended data for identifying an order in any e-commerce
type IntegrationOrderIdentification struct {
	// This is the `order_id` as seen by the customer (for example, in the email confirmation) 
	CustomerPrintedOrderId *string `json:"customer_printed_order_id,omitempty"`
	// Unique identifier in the origin platform. Might not be customer-friendly
	Id *string `json:"id,omitempty"`
}

// NewIntegrationOrderIdentification instantiates a new IntegrationOrderIdentification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationOrderIdentification() *IntegrationOrderIdentification {
	this := IntegrationOrderIdentification{}
	return &this
}

// NewIntegrationOrderIdentificationWithDefaults instantiates a new IntegrationOrderIdentification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationOrderIdentificationWithDefaults() *IntegrationOrderIdentification {
	this := IntegrationOrderIdentification{}
	return &this
}

// GetCustomerPrintedOrderId returns the CustomerPrintedOrderId field value if set, zero value otherwise.
func (o *IntegrationOrderIdentification) GetCustomerPrintedOrderId() string {
	if o == nil || isNil(o.CustomerPrintedOrderId) {
		var ret string
		return ret
	}
	return *o.CustomerPrintedOrderId
}

// GetCustomerPrintedOrderIdOk returns a tuple with the CustomerPrintedOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationOrderIdentification) GetCustomerPrintedOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.CustomerPrintedOrderId) {
    return nil, false
	}
	return o.CustomerPrintedOrderId, true
}

// HasCustomerPrintedOrderId returns a boolean if a field has been set.
func (o *IntegrationOrderIdentification) HasCustomerPrintedOrderId() bool {
	if o != nil && !isNil(o.CustomerPrintedOrderId) {
		return true
	}

	return false
}

// SetCustomerPrintedOrderId gets a reference to the given string and assigns it to the CustomerPrintedOrderId field.
func (o *IntegrationOrderIdentification) SetCustomerPrintedOrderId(v string) {
	o.CustomerPrintedOrderId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IntegrationOrderIdentification) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationOrderIdentification) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IntegrationOrderIdentification) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IntegrationOrderIdentification) SetId(v string) {
	o.Id = &v
}

func (o IntegrationOrderIdentification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CustomerPrintedOrderId) {
		toSerialize["customer_printed_order_id"] = o.CustomerPrintedOrderId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationOrderIdentification struct {
	value *IntegrationOrderIdentification
	isSet bool
}

func (v NullableIntegrationOrderIdentification) Get() *IntegrationOrderIdentification {
	return v.value
}

func (v *NullableIntegrationOrderIdentification) Set(val *IntegrationOrderIdentification) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationOrderIdentification) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationOrderIdentification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationOrderIdentification(val *IntegrationOrderIdentification) *NullableIntegrationOrderIdentification {
	return &NullableIntegrationOrderIdentification{value: val, isSet: true}
}

func (v NullableIntegrationOrderIdentification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationOrderIdentification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


