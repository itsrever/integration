/*
Integration stubs

Stubs for implementing a REVER integration

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// IntegrationOrderCustomer Customer associated to the order
type IntegrationOrderCustomer struct {
	// two-letter code as per the ISO 639-1 codes, preferred by the customer 
	PreferredLang *string `json:"preferred_lang,omitempty"`
	// Email address of the customer. This field will be used to match the customer when starting a return process 
	Email *string `json:"email,omitempty"`
	FirstName *string `json:"first_name,omitempty"`
	LastName *string `json:"last_name,omitempty"`
}

// NewIntegrationOrderCustomer instantiates a new IntegrationOrderCustomer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationOrderCustomer() *IntegrationOrderCustomer {
	this := IntegrationOrderCustomer{}
	return &this
}

// NewIntegrationOrderCustomerWithDefaults instantiates a new IntegrationOrderCustomer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationOrderCustomerWithDefaults() *IntegrationOrderCustomer {
	this := IntegrationOrderCustomer{}
	return &this
}

// GetPreferredLang returns the PreferredLang field value if set, zero value otherwise.
func (o *IntegrationOrderCustomer) GetPreferredLang() string {
	if o == nil || isNil(o.PreferredLang) {
		var ret string
		return ret
	}
	return *o.PreferredLang
}

// GetPreferredLangOk returns a tuple with the PreferredLang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationOrderCustomer) GetPreferredLangOk() (*string, bool) {
	if o == nil || isNil(o.PreferredLang) {
    return nil, false
	}
	return o.PreferredLang, true
}

// HasPreferredLang returns a boolean if a field has been set.
func (o *IntegrationOrderCustomer) HasPreferredLang() bool {
	if o != nil && !isNil(o.PreferredLang) {
		return true
	}

	return false
}

// SetPreferredLang gets a reference to the given string and assigns it to the PreferredLang field.
func (o *IntegrationOrderCustomer) SetPreferredLang(v string) {
	o.PreferredLang = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *IntegrationOrderCustomer) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationOrderCustomer) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *IntegrationOrderCustomer) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *IntegrationOrderCustomer) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *IntegrationOrderCustomer) GetFirstName() string {
	if o == nil || isNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationOrderCustomer) GetFirstNameOk() (*string, bool) {
	if o == nil || isNil(o.FirstName) {
    return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *IntegrationOrderCustomer) HasFirstName() bool {
	if o != nil && !isNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *IntegrationOrderCustomer) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *IntegrationOrderCustomer) GetLastName() string {
	if o == nil || isNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationOrderCustomer) GetLastNameOk() (*string, bool) {
	if o == nil || isNil(o.LastName) {
    return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *IntegrationOrderCustomer) HasLastName() bool {
	if o != nil && !isNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *IntegrationOrderCustomer) SetLastName(v string) {
	o.LastName = &v
}

func (o IntegrationOrderCustomer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PreferredLang) {
		toSerialize["preferred_lang"] = o.PreferredLang
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !isNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationOrderCustomer struct {
	value *IntegrationOrderCustomer
	isSet bool
}

func (v NullableIntegrationOrderCustomer) Get() *IntegrationOrderCustomer {
	return v.value
}

func (v *NullableIntegrationOrderCustomer) Set(val *IntegrationOrderCustomer) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationOrderCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationOrderCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationOrderCustomer(val *IntegrationOrderCustomer) *NullableIntegrationOrderCustomer {
	return &NullableIntegrationOrderCustomer{value: val, isSet: true}
}

func (v NullableIntegrationOrderCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationOrderCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


