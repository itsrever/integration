name: ci

on:
    push:
        branches:
            - "main"
        tags:
            - "v*.*.*"

    pull_request:
        branches:
            - "main"

env:
    TESTER_IMAGE_NAME: itsrever/testing
    SERVER_IMAGE_NAME: itsrever/integration-server
    PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    RUN_REGION: europe-west3
    SERVICE_NAME: server

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Run tests
        run: make unit-test-ci
  lint: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: '1.21'
      - name: Set up gotestfmt
        run: go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest
      - name: Install golang-ci-lint
        run: make install-lint-ubuntu
      - name: Install go-imports 
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Run linter
        run: make lint
  docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: execute docker tests
        run: make with-docker-test-linux-ci

  deploy-docker-tester:
    runs-on: ubuntu-latest
    needs: [tests, docker-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.TESTER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Build and push Docker image (Docker Hub)
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-docker-server:
    runs-on: ubuntu-latest
    needs: [tests, docker-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.SERVER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Build and push Docker image (Docker Hub)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    
  deploy-gcp-server:
    runs-on: ubuntu-latest
    needs: deploy-docker-server
    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - id: 'auth'
          uses: 'google-github-actions/auth@v1'
          with:
            credentials_json: ${{ secrets.GCP_CREDENTIALS }}

        - uses: 'google-github-actions/setup-gcloud@v1'
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
       
        - name: Deploy
          run: |
              gcloud run deploy $SERVICE_NAME \
                --image ${{ env.SERVER_IMAGE_NAME }}:latest \
                --region $RUN_REGION