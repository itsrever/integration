/*
 * Integration stubs
 *
 * Stubs for implementing a REVER integration
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

type ReturnStatus struct {

	// Status of the return which could be set to accepted or rejected by the ecommerce after the review.
	ReturnStatus string `json:"return_status,omitempty"`
}

// AssertReturnStatusRequired checks if the required fields are not zero-ed
func AssertReturnStatusRequired(obj ReturnStatus) error {
	return nil
}

// AssertRecurseReturnStatusRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ReturnStatus (e.g. [][]ReturnStatus), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseReturnStatusRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aReturnStatus, ok := obj.(ReturnStatus)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertReturnStatusRequired(aReturnStatus)
	})
}
