/*
 * Integration stubs
 *
 * Stubs for implementing a REVER integration
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

// ReturnRequest - Payload for the method CreateOrUpdateReturn.
type ReturnRequest struct {

	// List of items to mark (or unmark) as returned. Can't be empty.
	Returns []ReturnRequestItem `json:"returns"`
}

// AssertReturnRequestRequired checks if the required fields are not zero-ed
func AssertReturnRequestRequired(obj ReturnRequest) error {
	elements := map[string]interface{}{
		"returns": obj.Returns,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Returns {
		if err := AssertReturnRequestItemRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseReturnRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ReturnRequest (e.g. [][]ReturnRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseReturnRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aReturnRequest, ok := obj.(ReturnRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertReturnRequestRequired(aReturnRequest)
	})
}
