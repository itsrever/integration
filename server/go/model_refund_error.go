/*
 * Integration stubs
 *
 * Stubs for implementing a REVER integration
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

// RefundError - Error response for the method CreateRefund.
type RefundError struct {

	// The error message.
	Error string `json:"error"`
}

// AssertRefundErrorRequired checks if the required fields are not zero-ed
func AssertRefundErrorRequired(obj RefundError) error {
	elements := map[string]interface{}{
		"error": obj.Error,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseRefundErrorRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RefundError (e.g. [][]RefundError), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRefundErrorRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRefundError, ok := obj.(RefundError)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRefundErrorRequired(aRefundError)
	})
}
