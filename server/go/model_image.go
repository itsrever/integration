/*
 * Integration stubs
 *
 * Stubs for implementing a REVER integration
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

// Image - An image from the e-commerce catalog
type Image struct {

	// Image alternative text
	Alt string `json:"alt,omitempty"`

	// Image name
	Name string `json:"name,omitempty"`

	// Image URL
	Src string `json:"src"`
}

// AssertImageRequired checks if the required fields are not zero-ed
func AssertImageRequired(obj Image) error {
	elements := map[string]interface{}{
		"src": obj.Src,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseImageRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Image (e.g. [][]Image), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseImageRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aImage, ok := obj.(Image)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertImageRequired(aImage)
	})
}
