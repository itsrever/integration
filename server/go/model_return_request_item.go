/*
 * Integration stubs
 *
 * Stubs for implementing a REVER integration
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

// ReturnRequestItem - Items from an order being marked as returned
type ReturnRequestItem struct {

	// The id of the line item from the order, corresponding to the product/variant being returned List of items to mark (or unmark) as returned
	LineItemId string `json:"line_item_id"`

	// Number of items from that line item being returned. Can be a positive or negative number. If negative, the previous return operation is totally or partially reverted.
	Quantity int32 `json:"quantity"`
}

// AssertReturnRequestItemRequired checks if the required fields are not zero-ed
func AssertReturnRequestItemRequired(obj ReturnRequestItem) error {
	elements := map[string]interface{}{
		"line_item_id": obj.LineItemId,
		"quantity": obj.Quantity,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseReturnRequestItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ReturnRequestItem (e.g. [][]ReturnRequestItem), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseReturnRequestItemRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aReturnRequestItem, ok := obj.(ReturnRequestItem)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertReturnRequestItemRequired(aReturnRequestItem)
	})
}
