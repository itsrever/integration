/*
 * Integration stubs
 *
 * Stubs for implementing a REVER integration
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

// IntegrationOrderShippingAddress - Address to where the Order was shipped. 
type IntegrationOrderShippingAddress struct {

	// Main address line. Usually the street and number. Should not be larger than 15 characters
	AddressLine1 string `json:"address_line_1"`

	// Secondary address line. Usually the floor, door, etc. Should not be larger than 15 characters
	AddressLine2 string `json:"address_line_2,omitempty"`

	City string `json:"city"`

	Company string `json:"company,omitempty"`

	// The name of the country as it is usually used in the language of the e-commerce
	Country string `json:"country"`

	// the 2-letter country code (alpha-2) from the ISO 3166
	CountryCode string `json:"country_code"`

	Email string `json:"email,omitempty"`

	FirstName string `json:"first_name"`

	LastName string `json:"last_name"`

	Phone string `json:"phone"`

	Postcode string `json:"postcode"`

	StateProvince string `json:"state_province,omitempty"`
}

// AssertIntegrationOrderShippingAddressRequired checks if the required fields are not zero-ed
func AssertIntegrationOrderShippingAddressRequired(obj IntegrationOrderShippingAddress) error {
	elements := map[string]interface{}{
		"address_line_1": obj.AddressLine1,
		"city": obj.City,
		"country": obj.Country,
		"country_code": obj.CountryCode,
		"first_name": obj.FirstName,
		"last_name": obj.LastName,
		"phone": obj.Phone,
		"postcode": obj.Postcode,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseIntegrationOrderShippingAddressRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of IntegrationOrderShippingAddress (e.g. [][]IntegrationOrderShippingAddress), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIntegrationOrderShippingAddressRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIntegrationOrderShippingAddress, ok := obj.(IntegrationOrderShippingAddress)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIntegrationOrderShippingAddressRequired(aIntegrationOrderShippingAddress)
	})
}
