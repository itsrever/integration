/*
 * Integration stubs
 *
 * Stubs for implementing a REVER integration
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	server "github.com/itsrever/integration/server/go"
	"github.com/itsrever/integration/server/refund"
)

func main() {
	log.Printf("Server started")

	refundManager := refund.New()
	IntegrationApiService := server.NewIntegrationApiService(refundManager)
	IntegrationApiController := server.NewIntegrationApiController(IntegrationApiService)

	router := server.NewRouter(IntegrationApiController)
	router.Use(apiKeyAuthMiddleware)

	//nolint:gosec
	log.Fatal(http.ListenAndServe(":8080", router))
}

func apiKeyAuthMiddleware(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		apiKey := r.Header.Get("x-rever-api-key")
		//nolint:gosec
		if apiKey != "valid-api-key" {
			http.Error(w, "Unauthorized", http.StatusUnauthorized)
			return
		}
		next.ServeHTTP(w, r)
	})
}
